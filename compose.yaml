services:
  bot:
    container_name: bot
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.docker
    depends_on:
      - mongo
    networks:
      - bridge
    restart: no
    volumes:
      - ./logs:/app/logs
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017
    networks:
      - bridge
  mongo-express:
    image: mongo-express
    restart: on-failure
    ports:
      - 8081:8081
    networks:
      - bridge
    env_file:
      - .env.docker
    environment:
    - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
    - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    - ME_CONFIG_MONGODB_URL=${MONGOURI}
    - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongo
  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - .env.docker
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      sh -c 'echo "requirepass ${REDIS_PASSWORD}" > /usr/local/etc/redis/redis.conf && redis-server --include /usr/local/etc/redis/redis.conf'
    ports:
      - 6379:6379
    networks:
      - bridge
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - .env.docker
    networks:
      - bridge
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom-data:/prometheus
    networks:
      - bridge
  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: unless-stopped
    ports:
      - 9091:9091
    networks:
      - bridge
  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - bridge
  cadvisor:
    image: google/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
volumes:
  mongodb:
  grafana-data:
  prom-data:
  redis-data:

networks:
  bridge:
