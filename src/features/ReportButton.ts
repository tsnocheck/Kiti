import {IFeature} from "../lib/discord/Feature";
import {ActionRowBuilder, ButtonInteraction, StringSelectMenuBuilder} from "discord.js";

export default class ButtonFeature implements IFeature<ButtonInteraction> {
  name = "ReportButton";

  async run({interaction}: { interaction: ButtonInteraction }): Promise<any> {
    const userId = interaction.customId.split('_')[1];
    const row = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(
      new StringSelectMenuBuilder()
        .setCustomId(`ReportMenu_${userId}`)
        .setPlaceholder('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã')
        .setOptions([
          {
            label: '–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö',
            emoji: 'üîû',
            value: 'nsfw_content'
          },
          {
            label: '–ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥.',
            emoji: 'üí∞',
            value: 'commerce',
          },
          {
            label: '–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–∑—ã–≤–∞—é—â–∏–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è',
            emoji: 'üìÑ',
            value: 'language',
          },
          {
            label: '–î—Ä—É–≥–æ–µ',
            emoji: 'üìú',
            value: 'other',
          },
        ])
    );

    await interaction.reply({
      content: '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã –Ω–∞ –∞–Ω–∫–µ—Ç—É',
      components: [row]
    });
  }
}
